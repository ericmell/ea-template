org.cometd.WebSocketTransport=function(){var _super=new org.cometd.Transport();var _self=org.cometd.Transport.derive(_super);var _cometd;var _supportsWebSocket=true;var _webSocketSupported=false;var _envelopes={};var _timeouts={};var _webSocket=null;var _opened=false;var _connected=false;var _successCallback;function _websocketConnect(){var url=_cometd.getURL().replace(/^http/,"ws");this._debug("Transport",this.getType(),"connecting to URL",url);var self=this;var connectTimer=null;var connectTimeout=_cometd.getConfiguration().connectTimeout;if(connectTimeout>0){connectTimer=this.setTimeout(function(){connectTimer=null;if(!_opened){self._debug("Transport",self.getType(),"timed out while connecting to URL",url,":",connectTimeout,"ms");self.onClose(1002,"Connect Timeout")}},connectTimeout)}var protocol=_cometd.getConfiguration().protocol;var webSocket=protocol?new org.cometd.WebSocket(url,protocol):new org.cometd.WebSocket(url);var onopen=function(){self._debug("WebSocket opened",webSocket);if(connectTimer){self.clearTimeout(connectTimer);connectTimer=null}if(webSocket!==_webSocket){self._debug("Ignoring open event, WebSocket",_webSocket);return}self.onOpen()};var onclose=function(event){var code=event?event.code:1000;var reason=event?event.reason:undefined;self._debug("WebSocket closed",code,"/",reason,webSocket);if(connectTimer){self.clearTimeout(connectTimer);connectTimer=null}if(webSocket!==_webSocket){self._debug("Ignoring close event, WebSocket",_webSocket);return}self.onClose(code,reason)};var onmessage=function(message){self._debug("WebSocket message",message,webSocket);if(webSocket!==_webSocket){self._debug("Ignoring message event, WebSocket",_webSocket);return}self.onMessage(message)};webSocket.onopen=onopen;webSocket.onclose=onclose;webSocket.onerror=function(){onclose({code:1002,reason:"Error"})};webSocket.onmessage=onmessage;_webSocket=webSocket;this._debug("Transport",this.getType(),"configured callbacks on",webSocket)}function _webSocketSend(envelope,metaConnect){var json=org.cometd.JSON.toJSON(envelope.messages);_webSocket.send(json);this._debug("Transport",this.getType(),"sent",envelope,"metaConnect =",metaConnect);var maxDelay=this.getConfiguration().maxNetworkDelay;var delay=maxDelay;if(metaConnect){delay+=this.getAdvice().timeout;_connected=true}var self=this;var webSocket=_webSocket;var messageIds=[];for(var i=0;i<envelope.messages.length;++i){var message=envelope.messages[i];if(message.id){messageIds.push(message.id);_timeouts[message.id]=this.setTimeout(function(){self.webSocketClose(webSocket,1000,"Timeout")},delay)}}this._debug("Transport",this.getType(),"waiting at most",delay,"ms for messages",messageIds,"maxNetworkDelay",maxDelay,", timeouts:",_timeouts)}function _send(envelope,metaConnect){try{if(_webSocket===null){_websocketConnect.call(this)}else{if(_opened){_webSocketSend.call(this,envelope,metaConnect)}}}catch(x){var webSocket=_webSocket;this.setTimeout(function(){envelope.onFailure(webSocket,envelope.messages,{exception:x})},0)}}_self.onOpen=function(){this._debug("Transport",this.getType(),"opened",_webSocket);_opened=true;_webSocketSupported=true;this._debug("Sending pending messages",_envelopes);for(var key in _envelopes){var element=_envelopes[key];var envelope=element[0];var metaConnect=element[1];_successCallback=envelope.onSuccess;_webSocketSend.call(this,envelope,metaConnect)}};_self.onMessage=function(wsMessage){this._debug("Transport",this.getType(),"received websocket message",wsMessage,_webSocket);var close=false;var messages=this.convertToMessages(wsMessage.data);var messageIds=[];for(var i=0;i<messages.length;++i){var message=messages[i];if(/^\/meta\//.test(message.channel)||message.data===undefined){if(message.id){messageIds.push(message.id);var timeout=_timeouts[message.id];if(timeout){this.clearTimeout(timeout);delete _timeouts[message.id];this._debug("Transport",this.getType(),"removed timeout for message",message.id,", timeouts",_timeouts)}}}if("/meta/connect"===message.channel){_connected=false}if("/meta/disconnect"===message.channel&&!_connected){close=true}}var removed=false;for(var j=0;j<messageIds.length;++j){var id=messageIds[j];for(var key in _envelopes){var ids=key.split(",");var index=org.cometd.Utils.inArray(id,ids);if(index>=0){removed=true;ids.splice(index,1);var envelope=_envelopes[key][0];var metaConnect=_envelopes[key][1];delete _envelopes[key];if(ids.length>0){_envelopes[ids.join(",")]=[envelope,metaConnect]}break}}}if(removed){this._debug("Transport",this.getType(),"removed envelope, envelopes",_envelopes)}_successCallback.call(this,messages);if(close){this.webSocketClose(_webSocket,1000,"Disconnect")}};_self.onClose=function(code,reason){this._debug("Transport",this.getType(),"closed",code,reason,_webSocket);_supportsWebSocket=_webSocketSupported;for(var id in _timeouts){this.clearTimeout(_timeouts[id])}_timeouts={};for(var key in _envelopes){var envelope=_envelopes[key][0];var metaConnect=_envelopes[key][1];if(metaConnect){_connected=false}envelope.onFailure(_webSocket,envelope.messages,{websocketCode:code,reason:reason})}_envelopes={};if(_opened){this.webSocketClose(_webSocket,1000,"Close")}_opened=false;_webSocket=null};_self.registered=function(type,cometd){_super.registered(type,cometd);_cometd=cometd};_self.accept=function(version,crossDomain,url){return _supportsWebSocket&&!!org.cometd.WebSocket&&_cometd.websocketEnabled!==false};_self.send=function(envelope,metaConnect){this._debug("Transport",this.getType(),"sending",envelope,"metaConnect =",metaConnect);var messageIds=[];for(var i=0;i<envelope.messages.length;++i){var message=envelope.messages[i];if(message.id){messageIds.push(message.id)}}_envelopes[messageIds.join(",")]=[envelope,metaConnect];this._debug("Transport",this.getType(),"stored envelope, envelopes",_envelopes);_send.call(this,envelope,metaConnect)};_self.webSocketClose=function(webSocket,code,reason){if(webSocket){try{webSocket.close(code,reason)}catch(x){this._debug(x)}}};_self.abort=function(){_super.abort();this.webSocketClose(_webSocket,1001,"Abort");this.reset()};_self.reset=function(){_super.reset();if(_opened){this.webSocketClose(_webSocket,1000,"Reset")}_supportsWebSocket=true;_webSocketSupported=false;_timeouts={};_envelopes={};_webSocket=null;_opened=false;_successCallback=null};return _self};